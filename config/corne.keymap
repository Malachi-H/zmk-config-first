/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        ctrlTab: ctrlTab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp TAB>;
            label = "CTRLTAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |     |  J  |  L  |  U  |  Y  |  ;  | BSPC |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |     |  M  |  N  |  E  |  I  |  O  |  '   |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |     |  K  |  H  |  ,  |  .  |  /  | ESC  |
            //                      | GUI | LWR | SPC |     | RET | RSE | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp F             &kp P  &kp B        &kp J          &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp APOSTROPHE
&kp LEFT_SHIFT    &kp A  &kp R  &kp S             &kp T  &kp G        &kp M          &kp N  &kp E      &kp I    &kp O          &kp RIGHT_SHIFT
&kp LEFT_COMMAND  &kp Z  &kp X  &kp C             &kp D  &kp V        &kp K          &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp ENTER
                                &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------------
            // |  TAB  |  1  |  2  |  3  |  4  |  5  |     |  6   |  7  |  8   |  9   |  0   |  BSPC  |
            // | BTCLR | BT0 | BT1 | BT2 | BT3 | BT4 |     | LEFT | DOWN|  UP  |RIGHT |      |        |
            // | SHFT  |     |     |     |     |     |     |      |     |      |      |      |        |
            //                     | GUI |     | SPC |     | RET  |     | ALT  |

            bindings = <
&kp ESCAPE  &kp N1     &kp N2         &kp N3        &kp N4        &kp N5          &kp N6      &kp N7    &kp N8    &kp N9     &kp N0      &trans
&bt BT_CLR  &ctrlTab   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT  &kp ESCAPE  &trans
&kp LSHFT   &kp LG(C)  &kp LS(LC(X))  &trans        &trans        &trans          &trans      &trans    &trans    &trans     &trans      &trans
                                      &kp LGUI      &trans        &kp SPACE       &kp DELETE  &trans    &kp RALT
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |     |  ^   |  &   |  *   |  (   |  )   | DELETE |
            // | CTRL |     |     |     |     |     |     |  -   |  =   |  [   |  ]   |  \   |  `     |
            // | SHFT |     |     |     |     |     |     |  _   |  +   |  {   |  }   |  |   |  ~     |
            //                    | GUI |     | SPC |     | RET  |      | ALT  |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp GRAVE
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
